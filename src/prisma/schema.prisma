//! Configurações do Prisma:
//* Gerador do cliente prisma:
generator client {
  provider = "prisma-client-js"
}

//* Definição do Banco de Dados com o prisma:
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//! Diagramação das tabelas:
//* Produtos e pedidos:
//? Tabela de produtos:
model Product {
  id     Int     @id @default(autoincrement())
  name   String  @unique
  price  Decimal @db.Decimal(12, 2)
  image  String
  orders Order[]
}

//? Tabela de endereços:
model Address {
  id           Int    @id @default(autoincrement())
  cep          String @db.VarChar(9)
  uf           String @db.VarChar(2)
  city         String @db.VarChar(30)
  neighborhood String @db.VarChar(50)
  street       String @db.VarChar(50)
  number       Int?
  sale         Sale[]
}

//? Tabela de clientes:
model Client {
  id    Int    @id @default(autoincrement())
  name  String
  type  String @db.VarChar(50)
  cnpj  String @db.VarChar(14)
  email String
  phone String @db.VarChar(19)
  sale  Sale[]
}

//? Tabela de pedidos:
model Order {
  id        Int     @id @default(autoincrement())
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  quantity  Int
  price     Decimal @db.Decimal(12, 2)
  sale      Sale    @relation(fields: [saleId], references: [id])
  saleId    Int
}

//? Tabela de vendas:
model Sale {
  id         Int      @id @default(autoincrement())
  createdAt  DateTime @default(now())
  price      Decimal  @db.Decimal(12, 2)
  deliveryAt DateTime
  client     Client   @relation(fields: [clientId], references: [id])
  clientId   Int
  address    Address  @relation(fields: [addressId], references: [id])
  addressId  Int
  situation  String
  orders     Order[]
}

//* Funcionários:
model Employee {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  role      String
  image     String
  createdAt DateTime @default(now())
}
